<?xml version="1.0" encoding="utf-8" standalone="no"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form classname="MDI" cssclass="frm_MDI" height="30" id="form" left="0" scrollbars="none" titletext="탭프레임" top="0" width="1072">
    <Layouts>
      <Layout>
        <Static cssclass="sta_MDI_Bg" height="33" id="Static00" left="0" right="0" style="color:#333333ff;" taborder="25" top="0"/>
        <Button cssclass="btn_Mdi_Close" height="24" id="btnCloseAll" onclick="fnBtnCloseAllOnclick" right="1" style="padding:0 0 0 20;" tooltiptext="모두닫기" top="3" width="24"/>
        <Button cssclass="btn_Mdi_Max" height="24" id="btnMaximize" onclick="fnBtnMaximizeOnclick" right="97" style="padding:0 0 0 7;" tooltiptext="최대화" top="3" width="24"/>
        <Div height="46" id="divTab" left="41" right="203" scrollbars="fixedhorz" taborder="2" top="1">
          <Layouts>
            <Layout/>
          </Layouts>
        </Div>
        <Button cssclass="btn_T" height="24" id="btnCascade" onclick="fnBtnCascadeOnclick" right="73" tooltiptext="타일" top="3" width="24"/>
        <Button cssclass="btn_MDI_Home" height="33" id="btnHome" left="0" onclick="fnBtnHomeOnclick" taborder="0" top="0" width="33"/>
        <Button cssclass="btn_MdiList" height="24" id="btnMdiList" onclick="fnBtnMdiListOnclick" right="121" tooltiptext="탭리스트" top="3" width="46"/>
        <PopupDiv height="254" id="pdvOpenMenu" left="715" style="background:#7ab7cfff 0cfff;" top="66" visible="false" width="200">
          <Layouts>
            <Layout>
              <Grid autofittype="col" binddataset="gdsOpenMenu" bottom="40" id="grdOpenMenu" left="0" oncellclick="fnGrdOpenMenuOncellclick" right="0" taborder="6" top="0" useinputpanel="false" useselcolor="true">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="30"/>
                      <Column size="107"/>
                      <Column size="22"/>
                    </Columns>
                    <Rows>
                      <Row size="24"/>
                    </Rows>
                    <Band id="body">
                      <Cell displaytype="checkbox" edittype="checkbox" text="bind:CHECKED"/>
                      <Cell col="1" style="align:left;" text="bind:MENU_NM"/>
                      <Cell col="2" displaytype="image" edittype="none" style="align:center middle;" text="URL('img::img_MDI_MenuClose.png')"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Button height="23" id="btnChkClose" left="7.74%" onclick="fnBtnChkCloseOnclick" right="50.97%" taborder="7" text="선택닫기" top="223"/>
              <Button height="23" id="btnAllClose" left="50.97%" onclick="fnBtnAllCloseOnclick" right="7.74%" taborder="8" text="전체닫기" top="223"/>
            </Layout>
          </Layouts>
        </PopupDiv>
        <Button cssclass="btn_Mdi_ver" height="24" id="btnTilevertical" onclick="fnBtnTileverticalOnclick" right="49" taborder="19" tooltiptext="수직" top="3" width="24"/>
        <Button cssclass="btn_Mdi_hor" height="24" id="btnTilehorizontal" onclick="fnBtnTilehorizontalOnclick" right="25" taborder="20" tooltiptext="수평" top="3" width="24"/>
        <Button cssclass="btnPrev" height="24" id="btnPrev" onclick="fnBtnPrevOnclick" right="183" taborder="21" top="3" width="16"/>
        <Button cssclass="btnNext" height="24" id="btnNext" onclick="fnBtnNextOnclick" right="167" taborder="22" top="3" width="16"/>
        <Button height="24" id="btnTmplTab" left="1.77%" onclick="fnBtnChkCloseOnclick" right="56.9%" taborder="24" text="탭css 샘플. 지우지 말것" top="57"/>
      </Layout>
    </Layouts>
    <Objects/>
    <Bind>
      <BindItem columnid="EPRO_LABEL_00984" compid="btnCloseAll" datasetid="gdsLabel" id="item6" propid="tooltiptext"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/**
 * @파일명       	: tabFrame.xfdl
 * @생성자       	: 한민희
 * @생성일자     	: 2017. 9. 6.
 * @설명			: 탭프레임
 * @최종수정자		: 한민희
 * @최종수정일자	: 2017. 9. 6.
*/  

/**
  * @함수명	: fnAddTab
  * @input     	: openId {String} OPEN_ID
				  strTitle {String} PGM_NM
  * @desc     	: 탭 추가
  */
this.fnAddTab = function (openId, strTitle)
{
	var tabId;
	var closeBtnId;
	var lastIdx;	//화면에 보이고 있는 마지막 탭 순번
	var lastTab;	//화면에 보이고 있는 마지막 탭

	tabId = "TAB_" + openId;
	lastIdx = (this.divTab.components.length-1) > 0 ? (this.divTab.components.length-1) : 0;
	lastTab = gfnIsNull(this.divTab.components[lastIdx]) ? 0 : this.divTab.components[lastIdx].getOffsetRight();
	
	//생성되는 탭 버튼
	var tabBtn = new Button();
    var nWidth = application.gv_multyLangage ? (strTitle.length * 6) + 30 : (strTitle.length * 13) + 30;	
	tabBtn.init(tabId, "absolute", lastTab, 1, nWidth, 30);
	tabBtn.set_text(strTitle);
	//tabBtn.style.set_align("left");
	//tabBtn.style.set_padding("0 20 0 10");
	tabBtn.set_cssclass("btn_MDI_TabS");
	
	tabBtn.set_tooltiptext(strTitle);	
	tabBtn.setEventHandler("onclick", this.fnBtnTabOnclick, this);
	tabBtn.setEventHandler("onrbuttonup", this.fnBtnTabOnrbuttonup, this);
	
	this.divTab.addChild(tabId, tabBtn);
	tabBtn.set_visible(false);
	tabBtn.show();
	
	var objSize = nexacro.getTextSize( strTitle, this.btnTmplTab.currentstyle.font );
	tabBtn.set_width(parseInt(objSize.nx) + 40);
	tabBtn.set_visible(true);	
	
	//닫기 버튼
	closeBtnId = "CLOSE_" + openId;
	var closeBtn = new Button();	
	closeBtn.init(closeBtnId, "absolute", tabBtn.getOffsetRight(), 1, 30,28);

	//closeBtn.set_text("X");
	//closeBtn.set_tooltiptext("닫기");
	closeBtn.set_cssclass("btn_MDI_TabCloseS");
	
	closeBtn.setEventHandler("onclick", this.fnBtnCloseOnclick, this);
	closeBtn.set_visible(true);	
	this.divTab.addChild(closeBtnId, closeBtn);
	closeBtn.show();
	
	gfnRedrawTab(openId);
 
	this.divTab.resetScroll();
}

 
/**
  * @함수명	: fnBtnTabOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:ClickEventInfo(이벤트변수)
  * @desc     	: 탭 버튼 onclick 이벤트
  */
this.fnBtnTabOnclick = function (obj:Button, e:ClickEventInfo)
{
	var openId = obj.name.split("TAB_").join("");
	gfnActiveFrame(openId);
}

/**
  * @함수명	: fnBtnTabOnrbuttonup
  * @input     	: obj:Button(버튼 오브젝트), e:ClickEventInfo(이벤트변수)
  * @desc     	: 탭에서 오른쪽 마우스 onclick 이벤트
  */
this.fnBtnTabOnrbuttonup = function (obj:Button, e:ClickEventInfo)
{
	var objPopupMenu = "";
	var openId = obj.name.split("TAB_").join("");
	var sPopMenuNm = "tabOnRbuttonPopMenu_" + openId;

	if(this.components[sPopMenuNm]) this.components[sPopMenuNm].destroy();
	
	objPopupMenu = new PopupMenu(sPopMenuNm, "absolute", 0, 0, 100, 100);

	var ds = new Dataset;
	ds.addColumn("ID", "string");
	ds.addColumn("NM", "string");
	ds.addColumn("LVL", "string");
	ds.addColumn("ENABLE", "string");
	ds.addRow();
	ds.setColumn(0, "ID", "close");
	ds.setColumn(0, "NM", "Close All But This");
	ds.setColumn(0, "LVL", 0);
	ds.setColumn(0, "ENABLE", 1);
	
	objPopupMenu.set_idcolumn("ID");
	objPopupMenu.set_userdatacolumn("ID");
	objPopupMenu.set_captioncolumn("NM");
	objPopupMenu.set_levelcolumn("LVL");
	objPopupMenu.set_enablecolumn("ENABLE");
	
 	objPopupMenu.setInnerDataset(ds);
	
	objPopupMenu.setEventHandler("onmenuclick", this.fnBtnTabPopMenuOnmenuclick, this);
	
	this.addChild(sPopMenuNm, objPopupMenu);
	
	objPopupMenu.show();
		
	var x = nexacro.toNumber(nexacro.System.getCursorX()) - nexacro.toNumber(system.clientToScreenX(application.mainframe, 0))+10;
	var y = nexacro.toNumber(nexacro.System.getCursorY()) - nexacro.toNumber(system.clientToScreenY(application.mainframe, 0))+10;

	objPopupMenu.trackPopup(x, y);
}

/**
  * @함수명	: fnBtnTabPopMenuOnmenuclick
  * @input     	: obj {PopupMenu} PopupMenu
				  e {MenuClickEventInfo} MenuClickEventInfo
  * @desc     	: 탭 팝업메뉴 onclick 이벤트
  */
this.fnBtnTabPopMenuOnmenuclick = function(obj, e)
{
    var openId = obj.name.split("tabOnRbuttonPopMenu_").join("");
	gfnTabOnClose(openId, true);
}

/**
  * @함수명	: fnBtnCloseOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:ClickEventInfo(이벤트변수)
  * @desc     	: 탭 닫기 버튼 onclick 이벤트
  */
this.fnBtnCloseOnclick = function (obj:Button, e:ClickEventInfo)
{
    var openId = obj.name.split("CLOSE_").join("");
	gfnTabOnClose(openId);
}

/**
  * @함수명	: fnGrdOpenMenuOncellclick
  * @input     	: obj:Grid(그리드 오브젝트), e:nexacro.GridClickEventInfo(이벤트변수)
  * @desc     	: 열려있는 화면목록이 뜨는 그리드의 oncellclick 이벤트
  */
this.fnGrdOpenMenuOncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	var openId = application.gdsOpenMenu.getColumn(application.gdsOpenMenu.rowposition, "OPEN_ID");
	
	if("MENU_NM" == gfnGrdBindColNm(obj, e.cell)){
		gfnActiveFrame(openId);
	}else if("CHECKED" != gfnGrdBindColNm(obj, e.cell)){
		gfnTabOnClose(openId);
	}
}

/**
  * @함수명	: fnBtnChkCloseOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 열려있는 화면목록이 뜨는 그리드에서 선택한 화면 닫기
  */
this.fnBtnChkCloseOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(!gfnIsGrdChk(application.gdsOpenMenu)){
		gfnAlert("선택된 화면이 없습니다");
		return;
	}
		
	for(var i=application.gdsOpenMenu.getRowCount()-1; i>=0; i--){
		if("1" == application.gdsOpenMenu.getColumn(i, "CHECKED")){
			gfnTabOnClose(application.gdsOpenMenu.getColumn(i, "OPEN_ID"));
		}		
	}
}

/**
  * @함수명	: fnBtnAllCloseOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 열려있는 화면목록이 뜨는 그리드에서 전체 화면 닫기
  */
this.fnBtnAllCloseOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	gfnTabOnClose(null);
}

/**
  * @함수명	: fnRemoveTrashForm
  * @desc     	: 탭에 없는데 남아있는 화면 삭제
  */
this.fnRemoveTrashForm = function()
{
	var framesInfo = application.gv_workFrameSet.frames;
	if(application.gdsOpenMenu.getRowCount() < framesInfo.length){
		for(var i=framesInfo.length-1; i>=0; i--){
			var nRow = application.gdsOpenMenu.findRow( "OPEN_ID", framesInfo[i].id );
			
			if(nRow < 0){
				framesInfo[i].destroy();
			}
		}
	}
}

/**
  * @함수명	: fnBtnMdiListOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 탭리스트 열기
  */
this.fnBtnMdiListOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(application.gdsOpenMenu.getRowCount() < 1) return;
	this.pdvOpenMenu.trackPopupByComponent(obj, 0, 30);
}

/**
  * @함수명	: fnBtnMaximizeOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: maximize
  */
this.fnBtnMaximizeOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	this.fnArrangeWin("maximize");	
}

/**
  * @함수명	: fnBtnCascadeOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: cascade
  */
this.fnBtnCascadeOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	this.fnArrangeWin("cascade");	
}

/**
  * @함수명	: fnBtnTileverticalOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: tilevertical
  */
this.fnBtnTileverticalOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	this.fnArrangeWin("tilevertical");	
}

/**
  * @함수명	: fnBtnTilehorizontalOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: tilehorizontal
  */
this.fnBtnTilehorizontalOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	this.fnArrangeWin("tilehorizontal");	
}

/**
  * @함수명	: fnBtnCloseAllOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: closeAll
  */
this.fnBtnCloseAllOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{	
	this.fnRemoveTrashForm();
	this.fnArrangeWin("closeAll");	
}

/**
  * @함수명	: fnArrangeWin
  * @input     	: strType {String} 정렬할 명령어
  * @desc     	: 열려있는 workFrame 화면을 최대화, cascade 등등으로 정렬
  */
this.fnArrangeWin = function(strType) 
{
	// workFrame영역에 open된 childFrame 갯수
	var iFramesCnt = application.gv_workFrameSet.frames.length;
	
	if(application.gdsOpenMenu.getRowCount() < 1) return;

	switch(strType){
		case "maximize" :
			for(var i=0; i<iFramesCnt; i++){
				application.gv_workFrameSet.frames[i].set_openstatus("maximize");		
				application.gv_workFrameSet.frames[i].set_showtitlebar(false);		
				application.gv_workFrameSet.frames[i].style.set_border("0 solid #006666ff");
			}
		break;
	   
		case "closeAll" :		
			gfnTabOnClose(null);			
	    break;
	    
	    case "minimize" :
			for (i=0; i<iFramesCnt; i++){			
				application.gv_workFrameSet.frames[i].set_showtitlebar(true);
				application.gv_workFrameSet.frames[i].style.set_border("1 solid #7f7f7bff");
				application.gv_workFrameSet.frames[i].style.set_bordertype("round 3 3");
				application.gv_workFrameSet.frames[i].set_openstatus("minimize");		
			}
			
			application.gv_workFrameSet.arrange(strType);
	    break;
	    
	    default :
			for (i=0; i<iFramesCnt; i++){			
				application.gv_workFrameSet.frames[i].set_showtitlebar(true);
				application.gv_workFrameSet.frames[i].style.set_border("1 solid #7f7f7bff");
				application.gv_workFrameSet.frames[i].style.set_bordertype("round 3 3");
				application.gv_workFrameSet.frames[i].set_openstatus("normal");							
			}
			
			application.gv_workFrameSet.arrange(strType);			
	    break;	   
	}
}

/**
  * @함수명	: fnBtnPrevOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 탭 왼쪽으로 스크롤
  */
this.fnBtnPrevOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.divTab.hscrollbar.set_pos(this.divTab.hscrollbar.pos - 120);
}

/**
  * @함수명	: fnBtnNextOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 탭 오른쪽으로 스크롤
  */
this.fnBtnNextOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.divTab.hscrollbar.set_pos(this.divTab.hscrollbar.pos + 120);
}

/**
  * @함수명	: fnBtnHomeOnclick
  * @input     	: obj:Button(버튼 오브젝트), e:nexacro.ClickEventInfo(이벤트변수)
  * @desc     	: 메인화면으로 이동
  */
this.fnBtnHomeOnclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fnRemoveTrashForm();
	gfnRedrawTab("", true);
	gfnCallMain();
}


]]></Script>
  </Form>
</FDL>
